{
  "address": "0xC51ACAA02cA5f88A09c4a540Db78eF3EcE27d61a",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "gameDay",
          "type": "uint256"
        }
      ],
      "name": "GameDayIncremented",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "checkUpkeep",
      "outputs": [
        {
          "internalType": "bool",
          "name": "upkeepNeeded",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gameDay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getGameDay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "incrementGameDay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "interval",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "keeperRegistry",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastTimeStamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "performUpkeep",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_interval",
          "type": "uint256"
        }
      ],
      "name": "updateInterval",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x8828c70da59455a6a7964d0db401666a3b45a294f687179777db088619bb289b",
  "receipt": {
    "to": null,
    "from": "0xAE5ac236357E7c6e483a20650c6891C36353E2a9",
    "contractAddress": "0xC51ACAA02cA5f88A09c4a540Db78eF3EcE27d61a",
    "transactionIndex": 5,
    "gasUsed": "647473",
    "logsBloom": "0x
    "blockHash": "0x18918e3a46d848b801222ba43c789ed21c3a27257ed1dbac12e0baf33026766c",
    "transactionHash": "0x8828c70da59455a6a7964d0db401666a3b45a294f687179777db088619bb289b",
    "logs": [
      {
        "transactionIndex": 5,
        "blockNumber": 27078341,
        "transactionHash": "0x8828c70da59455a6a7964d0db401666a3b45a294f687179777db088619bb289b",
        "address": "0xC51ACAA02cA5f88A09c4a540Db78eF3EcE27d61a",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000ae5ac236357e7c6e483a20650c6891c36353e2a9"
        ],
        "data": "0x",
        "logIndex": 13,
        "blockHash": "0x18918e3a46d848b801222ba43c789ed21c3a27257ed1dbac12e0baf33026766c"
      }
    ],
    "blockNumber": 27078341,
    "cumulativeGasUsed": "1617095",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 2,
  "solcInputHash": "9ef56661ce4982f924e17a84b78c524b",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"gameDay\",\"type\":\"uint256\"}],\"name\":\"GameDayIncremented\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gameDay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGameDay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"incrementGameDay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"interval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"keeperRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastTimeStamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_interval\",\"type\":\"uint256\"}],\"name\":\"updateInterval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"OxSnosh\",\"details\":\"this contract will allow gelato automation to maintain the game clock that increments every 12 hours\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"KeeperContract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/KeeperFile.sol\":\"KeeperContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\"},\"contracts/KeeperFile.sol\":{\"content\":\"//SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.17;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\n///@title KeeperContract\\n///@author OxSnosh\\n///@dev this contract will allow gelato automation to maintain the game clock that increments every 12 hours\\ncontract KeeperContract is Ownable {\\n    uint256 public gameDay;\\n    uint public interval;\\n    uint public lastTimeStamp;\\n    address public keeperRegistry;\\n\\n    event GameDayIncremented(uint256 indexed gameDay);\\n\\n    constructor() {\\n        interval = 30 seconds;\\n        lastTimeStamp = block.timestamp;\\n        gameDay = 0;\\n    }\\n\\n    function checkUpkeep() external view returns (bool upkeepNeeded) {\\n        upkeepNeeded = (block.timestamp - lastTimeStamp) >= interval;\\n        return (upkeepNeeded);\\n    }\\n\\n    function performUpkeep() external {\\n        require((block.timestamp - lastTimeStamp) >= interval, \\\"Upkeep not needed\\\");\\n        lastTimeStamp = lastTimeStamp + interval;\\n        gameDay++;\\n        emit GameDayIncremented(gameDay);\\n    }\\n\\n    function incrementGameDay() public onlyOwner {\\n        gameDay++;\\n        lastTimeStamp = block.timestamp;\\n        emit GameDayIncremented(gameDay);\\n    }\\n\\n    function updateInterval(uint _interval) public onlyOwner {\\n        interval = _interval;\\n    }\\n\\n    function getGameDay() public view returns (uint256) {\\n        return gameDay;\\n    }\\n}\\n\",\"keccak256\":\"0x4a1d082cdd95c89e4294eb018563f61f617cb6b1b06ff9a6942a8681d4a0f93b\",\"license\":\"BUSL-1.1\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061002d61002261004960201b60201c565b61005160201b60201c565b601e600281905550426003819055506000600181905550610115565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61096f806101246000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80638da5cb5b116100715780638da5cb5b14610145578063947a36fb14610163578063a13abdad14610181578063b0bf01751461019f578063d0f07926146101a9578063f2fde38b146101c5576100b4565b806332cac735146100b95780633f3b3b27146100d75780634bf47c0b146100f55780636e4d243a14610113578063715018a61461011d57806383e2277414610127575b600080fd5b6100c16101e1565b6040516100ce919061057b565b60405180910390f35b6100df6101e7565b6040516100ec919061057b565b60405180910390f35b6100fd6101ed565b60405161010a919061057b565b60405180910390f35b61011b6101f7565b005b6101256102a8565b005b61012f6102bc565b60405161013c91906105d7565b60405180910390f35b61014d6102e2565b60405161015a91906105d7565b60405180910390f35b61016b61030b565b604051610178919061057b565b60405180910390f35b610189610311565b604051610196919061060d565b60405180910390f35b6101a761032b565b005b6101c360048036038101906101be9190610659565b610383565b005b6101df60048036038101906101da91906106b2565b610395565b005b60015481565b60035481565b6000600154905090565b60025460035442610208919061070e565b1015610249576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102409061079f565b60405180910390fd5b60025460035461025991906107bf565b60038190555060016000815480929190610272906107f3565b91905055506001547f43f7bffe5b6f9993e37b802f6118ac19ff9d88c22a6d1a3bb840ddd53ae73a8f60405160405180910390a2565b6102b0610418565b6102ba6000610496565b565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60025481565b600060025460035442610324919061070e565b1015905090565b610333610418565b60016000815480929190610346906107f3565b9190505550426003819055506001547f43f7bffe5b6f9993e37b802f6118ac19ff9d88c22a6d1a3bb840ddd53ae73a8f60405160405180910390a2565b61038b610418565b8060028190555050565b61039d610418565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361040c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610403906108ad565b60405180910390fd5b61041581610496565b50565b61042061055a565b73ffffffffffffffffffffffffffffffffffffffff1661043e6102e2565b73ffffffffffffffffffffffffffffffffffffffff1614610494576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048b90610919565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000819050919050565b61057581610562565b82525050565b6000602082019050610590600083018461056c565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105c182610596565b9050919050565b6105d1816105b6565b82525050565b60006020820190506105ec60008301846105c8565b92915050565b60008115159050919050565b610607816105f2565b82525050565b600060208201905061062260008301846105fe565b92915050565b600080fd5b61063681610562565b811461064157600080fd5b50565b6000813590506106538161062d565b92915050565b60006020828403121561066f5761066e610628565b5b600061067d84828501610644565b91505092915050565b61068f816105b6565b811461069a57600080fd5b50565b6000813590506106ac81610686565b92915050565b6000602082840312156106c8576106c7610628565b5b60006106d68482850161069d565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061071982610562565b915061072483610562565b925082820390508181111561073c5761073b6106df565b5b92915050565b600082825260208201905092915050565b7f55706b656570206e6f74206e6565646564000000000000000000000000000000600082015250565b6000610789601183610742565b915061079482610753565b602082019050919050565b600060208201905081810360008301526107b88161077c565b9050919050565b60006107ca82610562565b91506107d583610562565b92508282019050808211156107ed576107ec6106df565b5b92915050565b60006107fe82610562565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036108305761082f6106df565b5b600182019050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610897602683610742565b91506108a28261083b565b604082019050919050565b600060208201905081810360008301526108c68161088a565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610903602083610742565b915061090e826108cd565b602082019050919050565b60006020820190508181036000830152610932816108f6565b905091905056fea264697066735822122038ec07053d61179e42c35461f748d5be9ef545c39fd7b19f57c9e22e2d5eb8d264736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c80638da5cb5b116100715780638da5cb5b14610145578063947a36fb14610163578063a13abdad14610181578063b0bf01751461019f578063d0f07926146101a9578063f2fde38b146101c5576100b4565b806332cac735146100b95780633f3b3b27146100d75780634bf47c0b146100f55780636e4d243a14610113578063715018a61461011d57806383e2277414610127575b600080fd5b6100c16101e1565b6040516100ce919061057b565b60405180910390f35b6100df6101e7565b6040516100ec919061057b565b60405180910390f35b6100fd6101ed565b60405161010a919061057b565b60405180910390f35b61011b6101f7565b005b6101256102a8565b005b61012f6102bc565b60405161013c91906105d7565b60405180910390f35b61014d6102e2565b60405161015a91906105d7565b60405180910390f35b61016b61030b565b604051610178919061057b565b60405180910390f35b610189610311565b604051610196919061060d565b60405180910390f35b6101a761032b565b005b6101c360048036038101906101be9190610659565b610383565b005b6101df60048036038101906101da91906106b2565b610395565b005b60015481565b60035481565b6000600154905090565b60025460035442610208919061070e565b1015610249576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102409061079f565b60405180910390fd5b60025460035461025991906107bf565b60038190555060016000815480929190610272906107f3565b91905055506001547f43f7bffe5b6f9993e37b802f6118ac19ff9d88c22a6d1a3bb840ddd53ae73a8f60405160405180910390a2565b6102b0610418565b6102ba6000610496565b565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60025481565b600060025460035442610324919061070e565b1015905090565b610333610418565b60016000815480929190610346906107f3565b9190505550426003819055506001547f43f7bffe5b6f9993e37b802f6118ac19ff9d88c22a6d1a3bb840ddd53ae73a8f60405160405180910390a2565b61038b610418565b8060028190555050565b61039d610418565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361040c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610403906108ad565b60405180910390fd5b61041581610496565b50565b61042061055a565b73ffffffffffffffffffffffffffffffffffffffff1661043e6102e2565b73ffffffffffffffffffffffffffffffffffffffff1614610494576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048b90610919565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000819050919050565b61057581610562565b82525050565b6000602082019050610590600083018461056c565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105c182610596565b9050919050565b6105d1816105b6565b82525050565b60006020820190506105ec60008301846105c8565b92915050565b60008115159050919050565b610607816105f2565b82525050565b600060208201905061062260008301846105fe565b92915050565b600080fd5b61063681610562565b811461064157600080fd5b50565b6000813590506106538161062d565b92915050565b60006020828403121561066f5761066e610628565b5b600061067d84828501610644565b91505092915050565b61068f816105b6565b811461069a57600080fd5b50565b6000813590506106ac81610686565b92915050565b6000602082840312156106c8576106c7610628565b5b60006106d68482850161069d565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061071982610562565b915061072483610562565b925082820390508181111561073c5761073b6106df565b5b92915050565b600082825260208201905092915050565b7f55706b656570206e6f74206e6565646564000000000000000000000000000000600082015250565b6000610789601183610742565b915061079482610753565b602082019050919050565b600060208201905081810360008301526107b88161077c565b9050919050565b60006107ca82610562565b91506107d583610562565b92508282019050808211156107ed576107ec6106df565b5b92915050565b60006107fe82610562565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036108305761082f6106df565b5b600182019050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610897602683610742565b91506108a28261083b565b604082019050919050565b600060208201905081810360008301526108c68161088a565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610903602083610742565b915061090e826108cd565b602082019050919050565b60006020820190508181036000830152610932816108f6565b905091905056fea264697066735822122038ec07053d61179e42c35461f748d5be9ef545c39fd7b19f57c9e22e2d5eb8d264736f6c63430008110033",
  "devdoc": {
    "author": "OxSnosh",
    "details": "this contract will allow gelato automation to maintain the game clock that increments every 12 hours",
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "KeeperContract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 533,
        "contract": "contracts/KeeperFile.sol:KeeperContract",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 38572,
        "contract": "contracts/KeeperFile.sol:KeeperContract",
        "label": "gameDay",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 38574,
        "contract": "contracts/KeeperFile.sol:KeeperContract",
        "label": "interval",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 38576,
        "contract": "contracts/KeeperFile.sol:KeeperContract",
        "label": "lastTimeStamp",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 38578,
        "contract": "contracts/KeeperFile.sol:KeeperContract",
        "label": "keeperRegistry",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}